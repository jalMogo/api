# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-11-26 00:14
from __future__ import unicode_literals

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('sa_api_v2', '0017_auto_20191108_2042'),
    ]

    operations = [
        migrations.AlterField(
            model_name='action',
            name='action',
            field=models.CharField(default='create', max_length=16),
        ),
        migrations.AlterField(
            model_name='action',
            name='thing',
            field=models.ForeignKey(db_column='data_id', on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='sa_api_v2.SubmittedThing'),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='addressfield',
            name='reverse_geocode',
            field=models.BooleanField(default=True, help_text="Inidicates whether the field will auto-update with a new address based on the map's location."),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='type',
            field=models.CharField(choices=[('CO', 'Cover'), ('RT', 'Rich Text')], default='CO', max_length=2),
        ),
        migrations.AlterField(
            model_name='checkboxfield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='checkboxfield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='checkboxfield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='checkboxfield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='checkboxfield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='default',
            field=models.BooleanField(default=False, help_text='If true, then this field will be selected by default.'),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='group_visibility_triggers',
            field=models.ManyToManyField(blank=True, help_text="Triggers an update to make the following NestedOrderedModules visible. Only default invisible modules are within this module's group are selectable here.", related_name='_checkboxoption_group_visibility_triggers_+', to='sa_api_v2.NestedOrderedModule'),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='icon',
            field=models.CharField(blank=True, help_text="An URL for the location of this option's icon. This field is optional.", max_length=127),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='label',
            field=models.CharField(help_text='For display purposes only. This is how the option will be presented on the form, or labelled in a submission summary.', max_length=127),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='make_private',
            field=models.BooleanField(default=False, help_text="If true, then the Place's 'private' field will be set to true when this option is selected."),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='stage_visibility_triggers',
            field=models.ManyToManyField(blank=True, help_text="Triggers an update to make the following FormStages visible. Only default invisible stages are within this module's Form are selectable here", related_name='_checkboxoption_stage_visibility_triggers_+', to='sa_api_v2.FormStage'),
        ),
        migrations.AlterField(
            model_name='checkboxoption',
            name='value',
            field=models.CharField(help_text="This is the value that will be associated with the field's key.", max_length=127),
        ),
        migrations.AlterField(
            model_name='dataindex',
            name='attr_name',
            field=models.CharField(db_index=True, max_length=100, verbose_name='Attribute name'),
        ),
        migrations.AlterField(
            model_name='dataindex',
            name='attr_type',
            field=models.CharField(choices=[('string', 'String')], default='string', max_length=10, verbose_name='Attribute type'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='auth_required',
            field=models.BooleanField(default=False, help_text='If True, then users must authenticate before they can post to this dataset'),
        ),
        migrations.AlterField(
            model_name='datasetpermission',
            name='submission_set',
            field=models.CharField(blank=True, help_text='Either the name of a submission set (e.g. "comments", "tags", or        "places"). Use a "*" to refer to all things.', max_length=128),
        ),
        migrations.AlterField(
            model_name='datasnapshotrequest',
            name='guid',
            field=models.TextField(blank=True, default='', unique=True),
        ),
        migrations.AlterField(
            model_name='datasnapshotrequest',
            name='status',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='form_format',
            field=models.CharField(blank=True, help_text='Formatting of the date that will be required for the input form', max_length=24),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='label_format',
            field=models.CharField(blank=True, help_text='Formatting of the date that will be used on the label', max_length=24),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='datefield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='filefield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='filefield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='filefield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='filefield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='filefield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='form',
            name='engagement_text',
            field=models.CharField(blank=True, help_text='When multiple forms are available to select, this text will help describe this form.', max_length=255),
        ),
        migrations.AlterField(
            model_name='form',
            name='image',
            field=models.CharField(blank=True, help_text="An URL for the location of this forms's image. Useful when selecting one of multiple forms on a flavor. This field is optional.", max_length=127),
        ),
        migrations.AlterField(
            model_name='formstage',
            name='header_text',
            field=models.CharField(blank=True, help_text='Use this when adding a header to the Form Stage. Usually used to summarize this section of the form.', max_length=512),
        ),
        migrations.AlterField(
            model_name='formstage',
            name='label',
            field=models.CharField(blank=True, help_text='An option label that can be used to describe the form stage. Currently it is only used internally.', max_length=255),
        ),
        migrations.AlterField(
            model_name='formstage',
            name='visible',
            field=models.BooleanField(default=True, help_text='Determines whether the stage is visible by default.'),
        ),
        migrations.AlterField(
            model_name='formstage',
            name='visible_layer_groups',
            field=models.ManyToManyField(blank=True, help_text='A list of layers that will become visible during this stage.', related_name='_formstage_visible_layer_groups_+', to='sa_api_v2.LayerGroup'),
        ),
        migrations.AlterField(
            model_name='group',
            name='dataset',
            field=models.ForeignKey(help_text='Which dataset does this group apply to?', on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='sa_api_v2.DataSet'),
        ),
        migrations.AlterField(
            model_name='group',
            name='name',
            field=models.CharField(help_text='What is the name of the group to which users with this group belong? For example: "judges", "administrators", "winners", ...', max_length=32),
        ),
        migrations.AlterField(
            model_name='groupmodule',
            name='label',
            field=models.CharField(blank=True, help_text="For naming purposes only - this won't be displayed to end users. Use this label to more easily identify this module whle building the form.", max_length=127),
        ),
        migrations.AlterField(
            model_name='grouppermission',
            name='submission_set',
            field=models.CharField(blank=True, help_text='Either the name of a submission set (e.g. "comments", "tags", or        "places"). Use a "*" to refer to all things.', max_length=128),
        ),
        migrations.AlterField(
            model_name='htmlmodule',
            name='content',
            field=models.TextField(help_text='Add HTML here that will be displayed on the form. Make sure that the html is valid and sanitized!'),
        ),
        migrations.AlterField(
            model_name='htmlmodule',
            name='label',
            field=models.CharField(blank=True, help_text="For naming purposes only - this won't be displayed to end users. Use this label to more easily identify this module whle building the form.", max_length=127),
        ),
        migrations.AlterField(
            model_name='keypermission',
            name='submission_set',
            field=models.CharField(blank=True, help_text='Either the name of a submission set (e.g. "comments", "tags", or        "places"). Use a "*" to refer to all things.', max_length=128),
        ),
        migrations.AlterField(
            model_name='modal',
            name='content',
            field=models.TextField(help_text='Add HTML here that will be displayed as a modal alongside the FormField. Make sure that the html is valid and sanitized!'),
        ),
        migrations.AlterField(
            model_name='modal',
            name='header',
            field=models.CharField(help_text='This is the label that the submit button will have', max_length=127),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='addressfield',
            field=models.OneToOneField(blank=True, help_text='Choose a address field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.AddressField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='checkboxfield',
            field=models.OneToOneField(blank=True, help_text='Choose a checkbox field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.CheckboxField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='datefield',
            field=models.OneToOneField(blank=True, help_text='Choose a date by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.DateField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='filefield',
            field=models.OneToOneField(blank=True, help_text='Choose a file by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.FileField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='htmlmodule',
            field=models.OneToOneField(blank=True, help_text='Choose a html module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.HtmlModule'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='numberfield',
            field=models.OneToOneField(blank=True, help_text='Choose a number by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.NumberField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='radiofield',
            field=models.OneToOneField(blank=True, help_text='Choose a radio by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.RadioField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='skipstagemodule',
            field=models.OneToOneField(blank=True, help_text='Choose a skip stage module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.SkipStageModule'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='submitbuttonmodule',
            field=models.OneToOneField(blank=True, help_text='Choose a submit button module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.SubmitButtonModule'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='textareafield',
            field=models.OneToOneField(blank=True, help_text='Choose a textarea field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.TextAreaField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='textfield',
            field=models.OneToOneField(blank=True, help_text='Choose a text field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.TextField'),
        ),
        migrations.AlterField(
            model_name='nestedorderedmodule',
            name='visible',
            field=models.BooleanField(default=True, help_text='Determines whether the module is visible by default.'),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='numberfield',
            name='units',
            field=models.CharField(blank=True, help_text='Units are used for labelling numerical submissions (eg: "13 acres")', max_length=127),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='addressfield',
            field=models.OneToOneField(blank=True, help_text='Choose a address field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.AddressField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='checkboxfield',
            field=models.OneToOneField(blank=True, help_text='Choose a checkbox field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.CheckboxField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='datefield',
            field=models.OneToOneField(blank=True, help_text='Choose a date by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.DateField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='filefield',
            field=models.OneToOneField(blank=True, help_text='Choose a file by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.FileField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='groupmodule',
            field=models.OneToOneField(blank=True, help_text='Choose a group module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.GroupModule'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='htmlmodule',
            field=models.OneToOneField(blank=True, help_text='Choose a html module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.HtmlModule'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='include_on_list',
            field=models.BooleanField(default=False, help_text='If true, then include this field when rendering list items.'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='numberfield',
            field=models.OneToOneField(blank=True, help_text='Choose a number by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.NumberField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='permitted_group',
            field=models.ForeignKey(blank=True, help_text="Only this Group is allowed to edit this module's field. If null, any group can edit.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='sa_api_v2.Group'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='radiofield',
            field=models.OneToOneField(blank=True, help_text='Choose a radio by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.RadioField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='skipstagemodule',
            field=models.OneToOneField(blank=True, help_text='Choose a skip stage module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.SkipStageModule'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='stage',
            field=models.ForeignKey(help_text='Every OrderedModule must belong to a FormStage.', on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='sa_api_v2.FormStage'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='submitbuttonmodule',
            field=models.OneToOneField(blank=True, help_text='Choose a submit button module by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.SubmitButtonModule'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='textareafield',
            field=models.OneToOneField(blank=True, help_text='Choose a textarea field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.TextAreaField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='textfield',
            field=models.OneToOneField(blank=True, help_text='Choose a text field by creating a new one, or selecting one that already exists within this flavor. Only one field/module can be selected for this OrderedModule.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.TextField'),
        ),
        migrations.AlterField(
            model_name='orderedmodule',
            name='visible',
            field=models.BooleanField(default=True, help_text='Determines whether the module is visible by default.'),
        ),
        migrations.AlterField(
            model_name='origin',
            name='pattern',
            field=models.CharField(help_text='The origin pattern, e.g., https://*.mapseed.org, http://localhost:*, http*://map.pugetsoundkeeper.org', max_length=100),
        ),
        migrations.AlterField(
            model_name='originpermission',
            name='submission_set',
            field=models.CharField(blank=True, help_text='Either the name of a submission set (e.g. "comments", "tags", or        "places"). Use a "*" to refer to all things.', max_length=128),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='bcc_email_1',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='bcc_email_2',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='bcc_email_3',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='bcc_email_4',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='bcc_email_5',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='body_html',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='default_recipient_email',
            field=models.EmailField(blank=True, default='', help_text='A "Default recipient email" will take precedence over a Submission\'s "Recipient email field".', max_length=254),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='event',
            field=models.CharField(choices=[('add', 'On add')], default='add', max_length=128),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='recipient_email_field',
            field=models.CharField(blank=True, default='', max_length=128),
        ),
        migrations.AlterField(
            model_name='placeemailtemplate',
            name='submission_set',
            field=models.CharField(blank=True, help_text='The name of a submission set         (e.g., "comments", "places", "support"). Leave blank to         refer to all submission sets.', max_length=128),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='dropdown_placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='radiofield',
            name='variant',
            field=models.CharField(choices=[('RA', 'a radio selection'), ('DR', 'a dropdown list'), ('TO', 'a toggle switch, choosing one of 2 choices'), ('AD', 'a dropdown list that allows fuzzy searching through the items')], default='RA', max_length=127),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='default',
            field=models.BooleanField(default=False, help_text='If true, then this field will be selected by default.'),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='group_visibility_triggers',
            field=models.ManyToManyField(blank=True, help_text="Triggers an update to make the following NestedOrderedModules visible. Only default invisible modules are within this module's group are selectable here.", related_name='_radiooption_group_visibility_triggers_+', to='sa_api_v2.NestedOrderedModule'),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='icon',
            field=models.CharField(blank=True, help_text="An URL for the location of this option's icon. This field is optional.", max_length=127),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='label',
            field=models.CharField(help_text='For display purposes only. This is how the option will be presented on the form, or labelled in a submission summary.', max_length=255),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='make_private',
            field=models.BooleanField(default=False, help_text="If true, then the Place's 'private' field will be set to true when this option is selected."),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='stage_visibility_triggers',
            field=models.ManyToManyField(blank=True, help_text="Triggers an update to make the following FormStages visible. Only default invisible stages are within this module's Form are selectable here", related_name='_radiooption_stage_visibility_triggers_+', to='sa_api_v2.FormStage'),
        ),
        migrations.AlterField(
            model_name='radiooption',
            name='value',
            field=models.CharField(help_text="This is the value that will be associated with the field's key.", max_length=127),
        ),
        migrations.AlterField(
            model_name='skipstagemodule',
            name='label',
            field=models.TextField(blank=True, default='', help_text='The message to be displayed on the form. When clicked, it will skip to the appropriate FormStage. Note that all modules within this FormStage should be optional for this to work properly. (eg: "This section is not relevant to me.")'),
        ),
        migrations.AlterField(
            model_name='skipstagemodule',
            name='stage',
            field=models.ForeignKey(blank=True, help_text='If null, skip to the next stage. Otherwise, we skip to the associated FormStage.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sa_api_v2.FormStage'),
        ),
        migrations.AlterField(
            model_name='submitbuttonmodule',
            name='label',
            field=models.CharField(default='Submit', help_text='This is the label that the submit button will have', max_length=127),
        ),
        migrations.AlterField(
            model_name='submittedthing',
            name='data',
            field=models.TextField(default='{}'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(code='invalid', message='Enter a valid color.', regex=re.compile('^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$', 32))]),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='textareafield',
            name='rich_text',
            field=models.BooleanField(default=False, help_text='Determines whether the field allows for rich text input.'),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='key',
            field=models.CharField(help_text="The key onto which the field's response will be saved", max_length=127),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='label',
            field=models.CharField(blank=True, help_text='This label will be used when displaying the submitted form field (eg: "My project idea is:")', max_length=127),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='placeholder',
            field=models.CharField(blank=True, help_text='Used to help guide users on what to type into the form\'s input box (eg: "Enter your email here", "joe@example.com")', max_length=512),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='private',
            field=models.BooleanField(default=False, help_text='If true, then the submitted data will be flagged as private'),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='prompt',
            field=models.CharField(blank=True, help_text='Some helpful text to guide the user on how to fill out this field (eg: "What is your project idea?")', max_length=512),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='required',
            field=models.BooleanField(default=False, help_text='If true, then the form cannot be submitted unless this field has received a response'),
        ),
        migrations.AlterField(
            model_name='textfield',
            name='variant',
            field=models.CharField(blank=True, choices=[('EM', 'Email'), ('PH', 'Phone'), ('AD', 'Address')], max_length=127),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='webhook',
            name='event',
            field=models.CharField(choices=[('add', 'On add')], default='add', max_length=128),
        ),
    ]
