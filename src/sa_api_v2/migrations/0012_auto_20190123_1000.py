# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2019-01-23 10:00


from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    dependencies = [
        ("sa_api_v2", "0011_auto_20181112_0104"),
    ]

    operations = [
        migrations.CreateModel(
            name="PlaceTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_datetime",
                    models.DateTimeField(
                        blank=True, db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "updated_datetime",
                    models.DateTimeField(auto_now=True, db_index=True),
                ),
                ("note", models.TextField(blank=True)),
                (
                    "place",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="sa_api_v2.Place",
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_datetime"],
                "db_table": "ms_api_place_tag",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=24)),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        max_length=7,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid",
                                message="Enter a valid color.",
                                regex=re.compile("^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"),
                            )
                        ],
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="sa_api_v2.DataSet",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="sa_api_v2.Tag",
                    ),
                ),
            ],
            options={"ordering": ["name"], "db_table": "ms_api_tag",},
        ),
        migrations.CreateModel(
            name="TagClosure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.IntegerField()),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagclosure_parents",
                        to="sa_api_v2.Tag",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagclosure_children",
                        to="sa_api_v2.Tag",
                    ),
                ),
            ],
            options={"db_table": "ms_api_tagclosure",},
        ),
        migrations.AlterField(
            model_name="datasetpermission",
            name="submission_set",
            field=models.CharField(
                blank=True,
                help_text='Either the name of a submission set (e.g., "comments"), "tags", or "places". Leave blank to refer to all things.',
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="grouppermission",
            name="submission_set",
            field=models.CharField(
                blank=True,
                help_text='Either the name of a submission set (e.g., "comments"), "tags", or "places". Leave blank to refer to all things.',
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="keypermission",
            name="submission_set",
            field=models.CharField(
                blank=True,
                help_text='Either the name of a submission set (e.g., "comments"), "tags", or "places". Leave blank to refer to all things.',
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="originpermission",
            name="submission_set",
            field=models.CharField(
                blank=True,
                help_text='Either the name of a submission set (e.g., "comments"), "tags", or "places". Leave blank to refer to all things.',
                max_length=128,
            ),
        ),
        migrations.AddField(
            model_name="placetag",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="place_tags",
                to="sa_api_v2.Tag",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tagclosure", unique_together=set([("parent", "child")]),
        ),
    ]
